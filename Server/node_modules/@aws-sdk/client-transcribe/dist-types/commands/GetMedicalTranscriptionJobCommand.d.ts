import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { GetMedicalTranscriptionJobRequest, GetMedicalTranscriptionJobResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, TranscribeClientResolvedConfig } from "../TranscribeClient";
export interface GetMedicalTranscriptionJobCommandInput extends GetMedicalTranscriptionJobRequest {
}
export interface GetMedicalTranscriptionJobCommandOutput extends GetMedicalTranscriptionJobResponse, __MetadataBearer {
}
/**
 * <p>Provides information about the specified medical transcription job.</p>
 *         <p>To view the status of the specified medical transcription job, check the
 *             <code>TranscriptionJobStatus</code> field. If the status is <code>COMPLETED</code>, the
 *             job is finished and you can find the results at the location specified in
 *             <code>TranscriptFileUri</code>. If the status is <code>FAILED</code>,
 *             <code>FailureReason</code> provides details on why your transcription job failed.</p>
 *         <p>To get a list of your medical transcription jobs, use the
 *              operation.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { TranscribeClient, GetMedicalTranscriptionJobCommand } from "@aws-sdk/client-transcribe"; // ES Modules import
 * // const { TranscribeClient, GetMedicalTranscriptionJobCommand } = require("@aws-sdk/client-transcribe"); // CommonJS import
 * const client = new TranscribeClient(config);
 * const command = new GetMedicalTranscriptionJobCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link GetMedicalTranscriptionJobCommandInput} for command's `input` shape.
 * @see {@link GetMedicalTranscriptionJobCommandOutput} for command's `response` shape.
 * @see {@link TranscribeClientResolvedConfig | config} for TranscribeClient's `config` shape.
 *
 */
export declare class GetMedicalTranscriptionJobCommand extends $Command<GetMedicalTranscriptionJobCommandInput, GetMedicalTranscriptionJobCommandOutput, TranscribeClientResolvedConfig> {
    readonly input: GetMedicalTranscriptionJobCommandInput;
    constructor(input: GetMedicalTranscriptionJobCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: TranscribeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMedicalTranscriptionJobCommandInput, GetMedicalTranscriptionJobCommandOutput>;
    private serialize;
    private deserialize;
}
