import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { UpdateCallAnalyticsCategoryRequest, UpdateCallAnalyticsCategoryResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, TranscribeClientResolvedConfig } from "../TranscribeClient";
export interface UpdateCallAnalyticsCategoryCommandInput extends UpdateCallAnalyticsCategoryRequest {
}
export interface UpdateCallAnalyticsCategoryCommandOutput extends UpdateCallAnalyticsCategoryResponse, __MetadataBearer {
}
/**
 * <p>Updates the specified Call Analytics category with new rules. Note that the
 *             <code>UpdateCallAnalyticsCategory</code> operation overwrites all existing rules contained in
 *             the specified category. You cannot append additional rules onto an existing category.</p>
 *         <p>To create a new category, see .</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { TranscribeClient, UpdateCallAnalyticsCategoryCommand } from "@aws-sdk/client-transcribe"; // ES Modules import
 * // const { TranscribeClient, UpdateCallAnalyticsCategoryCommand } = require("@aws-sdk/client-transcribe"); // CommonJS import
 * const client = new TranscribeClient(config);
 * const command = new UpdateCallAnalyticsCategoryCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link UpdateCallAnalyticsCategoryCommandInput} for command's `input` shape.
 * @see {@link UpdateCallAnalyticsCategoryCommandOutput} for command's `response` shape.
 * @see {@link TranscribeClientResolvedConfig | config} for TranscribeClient's `config` shape.
 *
 */
export declare class UpdateCallAnalyticsCategoryCommand extends $Command<UpdateCallAnalyticsCategoryCommandInput, UpdateCallAnalyticsCategoryCommandOutput, TranscribeClientResolvedConfig> {
    readonly input: UpdateCallAnalyticsCategoryCommandInput;
    constructor(input: UpdateCallAnalyticsCategoryCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: TranscribeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateCallAnalyticsCategoryCommandInput, UpdateCallAnalyticsCategoryCommandOutput>;
    private serialize;
    private deserialize;
}
