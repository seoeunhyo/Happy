import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ListCallAnalyticsCategoriesRequest, ListCallAnalyticsCategoriesResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, TranscribeClientResolvedConfig } from "../TranscribeClient";
export interface ListCallAnalyticsCategoriesCommandInput extends ListCallAnalyticsCategoriesRequest {
}
export interface ListCallAnalyticsCategoriesCommandOutput extends ListCallAnalyticsCategoriesResponse, __MetadataBearer {
}
/**
 * <p>Provides a list of Call Analytics categories, including all rules that make up each category.</p>
 *         <p>To get detailed information about a specific Call Analytics category, use the
 *              operation.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { TranscribeClient, ListCallAnalyticsCategoriesCommand } from "@aws-sdk/client-transcribe"; // ES Modules import
 * // const { TranscribeClient, ListCallAnalyticsCategoriesCommand } = require("@aws-sdk/client-transcribe"); // CommonJS import
 * const client = new TranscribeClient(config);
 * const command = new ListCallAnalyticsCategoriesCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link ListCallAnalyticsCategoriesCommandInput} for command's `input` shape.
 * @see {@link ListCallAnalyticsCategoriesCommandOutput} for command's `response` shape.
 * @see {@link TranscribeClientResolvedConfig | config} for TranscribeClient's `config` shape.
 *
 */
export declare class ListCallAnalyticsCategoriesCommand extends $Command<ListCallAnalyticsCategoriesCommandInput, ListCallAnalyticsCategoriesCommandOutput, TranscribeClientResolvedConfig> {
    readonly input: ListCallAnalyticsCategoriesCommandInput;
    constructor(input: ListCallAnalyticsCategoriesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: TranscribeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListCallAnalyticsCategoriesCommandInput, ListCallAnalyticsCategoriesCommandOutput>;
    private serialize;
    private deserialize;
}
