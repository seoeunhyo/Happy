import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { GetCallAnalyticsJobRequest, GetCallAnalyticsJobResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, TranscribeClientResolvedConfig } from "../TranscribeClient";
export interface GetCallAnalyticsJobCommandInput extends GetCallAnalyticsJobRequest {
}
export interface GetCallAnalyticsJobCommandOutput extends GetCallAnalyticsJobResponse, __MetadataBearer {
}
/**
 * <p>Provides information about the specified Call Analytics job.</p>
 *         <p>To view the job's status, refer to <code>CallAnalyticsJobStatus</code>. If the status is
 *             <code>COMPLETED</code>, the job is finished. You can find your completed transcript at
 *             the URI specified in <code>TranscriptFileUri</code>. If the status is <code>FAILED</code>,
 *             <code>FailureReason</code> provides details on why your transcription job failed.</p>
 *         <p>If you enabled personally identifiable information (PII) redaction, the redacted transcript
 *             appears at the location specified in <code>RedactedTranscriptFileUri</code>.</p>
 *          <p>If you chose to redact the audio in your media file, you can find your redacted media file
 *            at the location specified in <code>RedactedMediaFileUri</code>.</p>
 *         <p>To get a list of your Call Analytics jobs, use the
 *             operation.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { TranscribeClient, GetCallAnalyticsJobCommand } from "@aws-sdk/client-transcribe"; // ES Modules import
 * // const { TranscribeClient, GetCallAnalyticsJobCommand } = require("@aws-sdk/client-transcribe"); // CommonJS import
 * const client = new TranscribeClient(config);
 * const command = new GetCallAnalyticsJobCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link GetCallAnalyticsJobCommandInput} for command's `input` shape.
 * @see {@link GetCallAnalyticsJobCommandOutput} for command's `response` shape.
 * @see {@link TranscribeClientResolvedConfig | config} for TranscribeClient's `config` shape.
 *
 */
export declare class GetCallAnalyticsJobCommand extends $Command<GetCallAnalyticsJobCommandInput, GetCallAnalyticsJobCommandOutput, TranscribeClientResolvedConfig> {
    readonly input: GetCallAnalyticsJobCommandInput;
    constructor(input: GetCallAnalyticsJobCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: TranscribeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetCallAnalyticsJobCommandInput, GetCallAnalyticsJobCommandOutput>;
    private serialize;
    private deserialize;
}
